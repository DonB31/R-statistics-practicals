plot(taille,poids)
# Affichage de plusiuers graphiques dans la meme fenetre
par(mfrow=c(2,2))  # 2 en lignes et 2 en colonnes par exemple
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
boxplot(taille,main="boxplot de la taille des plantes",ylab="taille")
plot(taille~origine_geo,las=3)
stripchart(taille~origine_geo,las=1)
```
gc()
-10 * log10(0.00666)
x= 1+2+3
x = c(2,3,5,8,4,6);longueur = length(x)
deuxieme_element = x[2]
acces_plusiuers_elements = x[c(2,4,1)]
valeurs_qui_se_suivent = x[2:4]
valeurs_superieures_a_4 = x[x>4]
inverse_de_x = 1/x
double_de_x = 2*x
arrondir_x_divise_par4 = round(x/4)
arrondir_x_divise_par3 = round(x/4 , 2)
# on ajoute ici l'argument qui permet de choisir combien de chiffres apres la virgule
summary(x)
valeur_min = min(x)
valeur_max = max(x)
mediane = median(x)
moyenne = mean(x)
variance = var(x)
ecart_type = sd(x)
croissance = read.table(file = "C:/Users/LRB4365A/Desktop/TP1 TDB/Croissance_plantes.txt" , sep="\t" , header = T , stringsAsFactors = T)
croissance
variables = names(croissance)
croissance$poids
attach(croissance)
origine_geo == 'pyr'
plantes_pyr = which(origine_geo == 'pyr') # identifier quels arbres ont pour originegeo et donc qui ont origine_geo == 'pyr' -> TRUE
pyr = croissance[origine_geo == 'pyr' ,  1:2]
# on va sauvegarder ces données dans un autre fichier .txt
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
summary(origine_geo) # on synthetise les origines des plantes et compter combien de plantes ont tel origine.
pie(summary(origine_geo)) # créer le camembert (pie chart)
pie(summary(origine_geo), main = "Origine géographique des plantes")
barplot(summary(origine_geo), main = "Origine géographique des plantes")
# on est sur une variable qualitative, on ne va parler de histogramme mais de diagramme en barres
# Histogrammes (variable quantitative)
hist(taille, xlim=c(40,90), xlab="Taille(cm)" , ylab = "effectif" , freq=T , main = "Histogramme de la taille des plantes" , col="green")
# Boite à moustaches (variable quantitative)
boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon')
# Plusieurs boite à moustaches ( une variable quantitative en fonction des modalité d'une variable qualitative )
plot(origine_geo , taille, las=3 , main="Boxplot de la taille des plantes en fonction de l'origine geographique" , col='red' , ylab="Taille" ,xlab="Origines")
stripchart(taille~origine_geo , las=1)
plot(taille,poids)
# Affichage de plusiuers graphiques dans la meme fenetre
par(mfrow=c(2,2))  # 2 en lignes et 2 en colonnes par exemple
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
boxplot(taille,main="boxplot de la taille des plantes",ylab="taille")
plot(taille~origine_geo,las=3)
stripchart(taille~origine_geo,las=1)
---
title: "Compte rendu TP1 - Initiation à R"
author: "Laroussi Labid Bachri"
date: "01/09/2025"
output:
html_document:
toc: yes
pdf_document:
toc: yes
---
# Premiers pas avec R et RMarkdown
Ceci est un document de type R Markdown. Markdown est une mise en forme syntaxique simplifiée pour rédiger des documents HTML, PDF ou encore MsWord. Pour plus de détails sur l'utilisation de R Markdown cf. <http://rmarkdown.rstudio.com>.
Le fichier doit avoir une extension ".Rmd". Quand vous cliquez sur le bouton **Knit**, le document sera généré et inclura le contenu ainsi que la sortie produite par le code R intégré dans le document. Le code R peut être intégré comme ceci :
```{r}
-10 * log10(0.00666)
```
Il existe beaucoup de documents et tutoriels en ligne que vous pouvez explorer par vous-même. Exemples :
- Mise en forme du texte : https://rmarkdown.rstudio.com/lesson-8.html
- Bouts de code R (chunks) : https://rmarkdown.rstudio.com/lesson-3.html
# Utilisation et calcul avec du code R
Cette partie est à compléter avec le sujet de TP en ligne : <https://moodle.utoulouse.fr/mod/page/view.php?id=21136>
## Utilisation de variables
Les variables (ou objets) permettent de stocker des données qui peuvent être :
* une valeur simple de type numérique (`numeric`), logique (`logical`), chaîne de caractères (`character`) ou qualitative (`factor`).
* une liste (appelée `vector`).
* un tableau à 2 dimensions, les colonnes pouvant avoir des types différents (`data.frame`). Ce sont les plus utilisés en statistiques.
* un tableau à 2 dimensions, toutes les cases ayant le même type (`matrix`).
* un tableau à plus de 2 dimension (`array`).
* une combinaison des précédents (`list`).
Une variable a un nom (défini par l'utilisateur) qui permet d'accéder à son contenu.
**Créer une variable appelée x qui stocke le résultat du calcul précédent 1 + 2 + 3.** L'affectation d'une valeur à une variable se fait avec <- ou le signe = comme suit dans la console :
**A compléter**
```{r}
x= 1+2+3
```
## Vecteurs
A compléter
```{r}
x = c(2,3,5,8,4,6);longueur = length(x)
```
```{r}
deuxieme_element = x[2]
acces_plusiuers_elements = x[c(2,4,1)]
valeurs_qui_se_suivent = x[2:4]
valeurs_superieures_a_4 = x[x>4]
inverse_de_x = 1/x
double_de_x = 2*x
arrondir_x_divise_par4 = round(x/4)
arrondir_x_divise_par3 = round(x/4 , 2)
# on ajoute ici l'argument qui permet de choisir combien de chiffres apres la virgule
```
## Fonctions
A compléter
```{r}
summary(x)
valeur_min = min(x)
valeur_max = max(x)
mediane = median(x)
moyenne = mean(x)
variance = var(x)
ecart_type = sd(x)
```
## Lecture et écriture de fichiers contenant des données
```{r}
croissance = read.table(file = "C:/Users/LRB4365A/Desktop/TP1 TDB/Croissance_plantes.txt" , sep="\t" , header = T , stringsAsFactors = T)
croissance
variables = names(croissance)
croissance$poids
attach(croissance)
origine_geo == 'pyr'
plantes_pyr = which(origine_geo == 'pyr') # identifier quels arbres ont pour originegeo et donc qui ont origine_geo == 'pyr' -> TRUE
pyr = croissance[origine_geo == 'pyr' ,  1:2]
# on va sauvegarder ces données dans un autre fichier .txt
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
```
## Fonctions graphiques
```{r}
summary(origine_geo) # on synthetise les origines des plantes et compter combien de plantes ont tel origine.
pie(summary(origine_geo), main = "Origine géographique des plantes")
barplot(summary(origine_geo), main = "Origine géographique des plantes")
# on est sur une variable qualitative, on ne va parler de histogramme mais de diagramme en barres
# Histogrammes (variable quantitative)
hist(taille, xlim=c(40,90), xlab="Taille(cm)" , ylab = "effectif" , freq=T , main = "Histogramme de la taille des plantes" , col="green")
# Boite à moustaches (variable quantitative)
boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon')
# Plusieurs boite à moustaches ( une variable quantitative en fonction des modalité d'une variable qualitative )
plot(origine_geo , taille, las=3 , main="Boxplot de la taille des plantes en fonction de l'origine geographique" , col='red' , ylab="Taille" ,xlab="Origines")
stripchart(taille~origine_geo , las=1)
plot(taille,poids)
# Affichage de plusiuers graphiques dans la meme fenetre
par(mfrow=c(2,2))  # 2 en lignes et 2 en colonnes par exemple
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
boxplot(taille,main="boxplot de la taille des plantes",ylab="taille")
plot(taille~origine_geo,las=3)
stripchart(taille~origine_geo,las=1)
```
---
title: "Compte rendu TP1 - Initiation à R"
author: "Laroussi Labid Bachri"
date: "01/09/2025"
output:
html_document:
toc: yes
pdf_document:
toc: yes
---
# Premiers pas avec R et RMarkdown
Ceci est un document de type R Markdown. Markdown est une mise en forme syntaxique simplifiée pour rédiger des documents HTML, PDF ou encore MsWord. Pour plus de détails sur l'utilisation de R Markdown cf. <http://rmarkdown.rstudio.com>.
Le fichier doit avoir une extension ".Rmd". Quand vous cliquez sur le bouton **Knit**, le document sera généré et inclura le contenu ainsi que la sortie produite par le code R intégré dans le document. Le code R peut être intégré comme ceci :
```{r}
-10 * log10(0.00666)
```
Il existe beaucoup de documents et tutoriels en ligne que vous pouvez explorer par vous-même. Exemples :
- Mise en forme du texte : https://rmarkdown.rstudio.com/lesson-8.html
- Bouts de code R (chunks) : https://rmarkdown.rstudio.com/lesson-3.html
# Utilisation et calcul avec du code R
Cette partie est à compléter avec le sujet de TP en ligne : <https://moodle.utoulouse.fr/mod/page/view.php?id=21136>
## Utilisation de variables
Les variables (ou objets) permettent de stocker des données qui peuvent être :
* une valeur simple de type numérique (`numeric`), logique (`logical`), chaîne de caractères (`character`) ou qualitative (`factor`).
* une liste (appelée `vector`).
* un tableau à 2 dimensions, les colonnes pouvant avoir des types différents (`data.frame`). Ce sont les plus utilisés en statistiques.
* un tableau à 2 dimensions, toutes les cases ayant le même type (`matrix`).
* un tableau à plus de 2 dimension (`array`).
* une combinaison des précédents (`list`).
Une variable a un nom (défini par l'utilisateur) qui permet d'accéder à son contenu.
**Créer une variable appelée x qui stocke le résultat du calcul précédent 1 + 2 + 3.** L'affectation d'une valeur à une variable se fait avec <- ou le signe = comme suit dans la console :
**A compléter**
```{r}
x= 1+2+3
```
## Vecteurs
A compléter
```{r}
x = c(2,3,5,8,4,6);longueur = length(x)
```
```{r}
deuxieme_element = x[2]
acces_plusiuers_elements = x[c(2,4,1)]
valeurs_qui_se_suivent = x[2:4]
valeurs_superieures_a_4 = x[x>4]
inverse_de_x = 1/x
double_de_x = 2*x
arrondir_x_divise_par4 = round(x/4)
arrondir_x_divise_par3 = round(x/4 , 2)
# on ajoute ici l'argument qui permet de choisir combien de chiffres apres la virgule
```
## Fonctions
A compléter
```{r}
summary(x)
valeur_min = min(x)
valeur_max = max(x)
mediane = median(x)
moyenne = mean(x)
variance = var(x)
ecart_type = sd(x)
```
## Lecture et écriture de fichiers contenant des données
```{r}
croissance = read.table(file = "C:/Users/LRB4365A/Desktop/TP1 TDB/Croissance_plantes.txt" , sep="\t" , header = T , stringsAsFactors = T)
croissance
variables = names(croissance)
croissance$poids
attach(croissance)
origine_geo == 'pyr'
plantes_pyr = which(origine_geo == 'pyr') # identifier quels arbres ont pour originegeo et donc qui ont origine_geo == 'pyr' -> TRUE
pyr = croissance[origine_geo == 'pyr' ,  1:2]
# on va sauvegarder ces données dans un autre fichier .txt
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
```
## Fonctions graphiques
```{r}
summary(origine_geo) # on synthetise les origines des plantes et compter combien de plantes ont tel origine.
pie(summary(origine_geo), main = "Origine géographique des plantes")
barplot(summary(origine_geo), main = "Origine géographique des plantes")
# on est sur une variable qualitative, on ne va parler de histogramme mais de diagramme en barres
# Histogrammes (variable quantitative)
hist(taille, xlim=c(40,90), xlab="Taille(cm)" , ylab = "effectif" , freq=T , main = "Histogramme de la taille des plantes" , col="green")
# Boite à moustaches (variable quantitative)
boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon')
# Plusieurs boite à moustaches ( une variable quantitative en fonction des modalité d'une variable qualitative )
plot(origine_geo , taille, las=3 , main="Boxplot de la taille des plantes en fonction de l'origine geographique" , col='red' , ylab="Taille" ,xlab="Origines")
stripchart(taille~origine_geo , las=1)
plot(taille,poids)
```
variables = names(croissance)
variables
origine_geo == 'pyr'
pyr = croissance[origine_geo == 'pyr' ,  1:2]
pyr
is_it_from_pyr = origine_geo == 'pyr'
is_it_from_pyr
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
write.table(pyr , "croissance_plantes_pyr.txt" , quote = T , col.names = T , row.names = F , sep="\t")
write.table(pyr , "croissance_plantes_pyr.txt" , quote = T , col.names = T , row.names = F , sep="\t")
write.table(pyr , "croissance_plantes_pyr.txt" , quote = f , col.names = T , row.names = F , sep="\t")
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
x11()
---
title: "Compte rendu TP1 - Initiation à R"
author: "Laroussi Labid Bachri"
date: "01/09/2025"
output:
pdf_document:
toc: yes
html_document:
toc: yes
---
# Premiers pas avec R et RMarkdown
Ceci est un document de type R Markdown. Markdown est une mise en forme syntaxique simplifiée pour rédiger des documents HTML, PDF ou encore MsWord. Pour plus de détails sur l'utilisation de R Markdown cf. <http://rmarkdown.rstudio.com>.
Le fichier doit avoir une extension ".Rmd". Quand vous cliquez sur le bouton **Knit**, le document sera généré et inclura le contenu ainsi que la sortie produite par le code R intégré dans le document. Le code R peut être intégré comme ceci :
```{r}
-10 * log10(0.00666)
```
Il existe beaucoup de documents et tutoriels en ligne que vous pouvez explorer par vous-même. Exemples :
- Mise en forme du texte : https://rmarkdown.rstudio.com/lesson-8.html
- Bouts de code R (chunks) : https://rmarkdown.rstudio.com/lesson-3.html
# Utilisation et calcul avec du code R
Cette partie est à compléter avec le sujet de TP en ligne : <https://moodle.utoulouse.fr/mod/page/view.php?id=21136>
## Utilisation de variables
Les variables (ou objets) permettent de stocker des données qui peuvent être :
* une valeur simple de type numérique (`numeric`), logique (`logical`), chaîne de caractères (`character`) ou qualitative (`factor`).
* une liste (appelée `vector`).
* un tableau à 2 dimensions, les colonnes pouvant avoir des types différents (`data.frame`). Ce sont les plus utilisés en statistiques.
* un tableau à 2 dimensions, toutes les cases ayant le même type (`matrix`).
* un tableau à plus de 2 dimension (`array`).
* une combinaison des précédents (`list`).
Une variable a un nom (défini par l'utilisateur) qui permet d'accéder à son contenu.
**Créer une variable appelée x qui stocke le résultat du calcul précédent 1 + 2 + 3.** L'affectation d'une valeur à une variable se fait avec <- ou le signe = comme suit dans la console :
**A compléter**
```{r}
x= 1+2+3
```
## Vecteurs
A compléter
```{r}
x = c(2,3,5,8,4,6);longueur = length(x)
```
```{r}
deuxieme_element = x[2]
acces_plusiuers_elements = x[c(2,4,1)]
valeurs_qui_se_suivent = x[2:4]
valeurs_superieures_a_4 = x[x>4]
inverse_de_x = 1/x
double_de_x = 2*x
arrondir_x_divise_par4 = round(x/4)
arrondir_x_divise_par3 = round(x/4 , 2)
# on ajoute ici l'argument qui permet de choisir combien de chiffres apres la virgule
```
## Fonctions
A compléter
```{r}
summary(x)
valeur_min = min(x)
valeur_max = max(x)
mediane = median(x)
moyenne = mean(x)
variance = var(x)
ecart_type = sd(x)
```
## Lecture et écriture de fichiers contenant des données
```{r}
croissance = read.table(file = "C:/Users/LRB4365A/Desktop/TP1 TDB/Croissance_plantes.txt" , sep="\t" , header = T , stringsAsFactors = T)
variables = names(croissance)
croissance$poids
attach(croissance)
is_it_from_pyr = origine_geo == 'pyr'
plantes_pyr = which(origine_geo == 'pyr') # identifier quels arbres ont pour originegeo et donc qui ont origine_geo == 'pyr' -> TRUE
pyr = croissance[origine_geo == 'pyr' ,  1:2]
# on va sauvegarder ces données dans un autre fichier .txt
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
```
## Fonctions graphiques
```{r}
summary(origine_geo) # on synthetise les origines des plantes et compter combien de plantes ont tel origine.
pie(summary(origine_geo), main = "Origine géographique des plantes")
barplot(summary(origine_geo), main = "Origine géographique des plantes")
# on est sur une variable qualitative, on ne va parler de histogramme mais de diagramme en barres
# Histogrammes (variable quantitative)
hist(taille, xlim=c(40,90), xlab="Taille(cm)" , ylab = "effectif" , freq=T , main = "Histogramme de la taille des plantes" , col="green")
# Boite à moustaches (variable quantitative)
boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon')
# Plusieurs boite à moustaches ( une variable quantitative en fonction des modalité d'une variable qualitative )
plot(origine_geo , taille, las=3 , main="Boxplot de la taille des plantes en fonction de l'origine geographique" , col='red' , ylab="Taille" ,xlab="Origines")
stripchart(taille~origine_geo , las=1)
plot(taille,poids)
# Affichage de plusieurs graphiques dans la meme fenetre
par(mfrow=c(2,2))  # 2 en lignes et 2 en colonnes par exemple
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
boxplot(taille,main="boxplot de la taille des plantes",ylab="taille")
plot(taille~origine_geo,las=3)
stripchart(taille~origine_geo,las=1)
```
pie(summary(origine_geo), main = "Origine géographique des plantes")
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes")
plot(taille,poids)
plot(taille,poids, col="red")
plot(taille,poids, col="red" , main = "Evolution du poids en focntion de la taille")
plot(taille,poids, col="red" , main = "Evolution du poids en fonction de la taille")
-10 * log10(0.00666)
x= 1+2+3
x = c(2,3,5,8,4,6);longueur = length(x)
deuxieme_element = x[2]
acces_plusiuers_elements = x[c(2,4,1)]
valeurs_qui_se_suivent = x[2:4]
valeurs_superieures_a_4 = x[x>4]
inverse_de_x = 1/x
double_de_x = 2*x
arrondir_x_divise_par4 = round(x/4)
arrondir_x_divise_par3 = round(x/4 , 2)
# on ajoute ici l'argument qui permet de choisir combien de chiffres apres la virgule
summary(x)
valeur_min = min(x)
valeur_max = max(x)
mediane = median(x)
moyenne = mean(x)
variance = var(x)
ecart_type = sd(x)
croissance = read.table(file = "C:/Users/LRB4365A/Desktop/TP1 TDB/Croissance_plantes.txt" , sep="\t" , header = T , stringsAsFactors = T)
variables = names(croissance)
croissance$poids
attach(croissance)
is_it_from_pyr = origine_geo == 'pyr'
plantes_pyr = which(origine_geo == 'pyr') # identifier quels arbres ont pour originegeo et donc qui ont origine_geo == 'pyr' -> TRUE
pyr = croissance[origine_geo == 'pyr' ,  1:2]
# on va sauvegarder ces données dans un autre fichier .txt
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
summary(origine_geo) # on synthetise les origines des plantes et compter combien de plantes ont tel origine.
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes")
barplot(summary(origine_geo), main = "Origine géographique des plantes")
# on est sur une variable qualitative, on ne va parler de histogramme mais de diagramme en barres
# Histogrammes (variable quantitative)
hist(taille, xlim=c(40,90), xlab="Taille(cm)" , ylab = "effectif" , freq=T , main = "Histogramme de la taille des plantes" , col="green")
# Boite à moustaches (variable quantitative)
boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon')
# Plusieurs boite à moustaches ( une variable quantitative en fonction des modalité d'une variable qualitative )
plot(origine_geo , taille, las=3 , main="Boxplot de la taille des plantes en fonction de l'origine geographique" , col='red' , ylab="Taille" ,xlab="Origines")
stripchart(taille~origine_geo , las=1)
plot(taille,poids, col="red" , main = "Evolution du poids en fonction de la taille")
# Affichage de plusieurs graphiques dans la meme fenetre
par(mfrow=c(2,2))  # 2 en lignes et 2 en colonnes par exemple
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
boxplot(taille,main="boxplot de la taille des plantes",ylab="taille")
plot(taille~origine_geo,las=3)
stripchart(taille~origine_geo,las=1)
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes",col=c("green","blue","red"))
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes",col=c("green","blue","red"))
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes",col=rainbow(12)))
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes",col=rainbow(12))
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes")
x11()
---
title: "Compte rendu TP1 Initiation à R"
author: "Laroussi Labid Bachri"
date: "01/09/2025"
output:
pdf_document:
toc: yes
html_document:
toc: yes
---
# Premiers pas avec R et RMarkdown
Ceci est un document de type R Markdown. Markdown est une mise en forme syntaxique simplifiée pour rédiger des documents HTML, PDF ou encore MsWord. Pour plus de détails sur l'utilisation de R Markdown cf. <http://rmarkdown.rstudio.com>.
Le fichier doit avoir une extension ".Rmd". Quand vous cliquez sur le bouton **Knit**, le document sera généré et inclura le contenu ainsi que la sortie produite par le code R intégré dans le document. Le code R peut être intégré comme ceci :
```{r}
-10 * log10(0.00666)
```
Il existe beaucoup de documents et tutoriels en ligne que vous pouvez explorer par vous-même. Exemples :
- Mise en forme du texte : https://rmarkdown.rstudio.com/lesson-8.html
- Bouts de code R (chunks) : https://rmarkdown.rstudio.com/lesson-3.html
# Utilisation et calcul avec du code R
Cette partie est à compléter avec le sujet de TP en ligne : <https://moodle.utoulouse.fr/mod/page/view.php?id=21136>
## Utilisation de variables
Les variables (ou objets) permettent de stocker des données qui peuvent être :
* une valeur simple de type numérique (`numeric`), logique (`logical`), chaîne de caractères (`character`) ou qualitative (`factor`).
* une liste (appelée `vector`).
* un tableau à 2 dimensions, les colonnes pouvant avoir des types différents (`data.frame`). Ce sont les plus utilisés en statistiques.
* un tableau à 2 dimensions, toutes les cases ayant le même type (`matrix`).
* un tableau à plus de 2 dimension (`array`).
* une combinaison des précédents (`list`).
Une variable a un nom (défini par l'utilisateur) qui permet d'accéder à son contenu.
**Créer une variable appelée x qui stocke le résultat du calcul précédent 1 + 2 + 3.** L'affectation d'une valeur à une variable se fait avec <- ou le signe = comme suit dans la console :
**A compléter**
```{r}
x= 1+2+3
```
## Vecteurs
A compléter
```{r}
x = c(2,3,5,8,4,6);longueur = length(x)
```
```{r}
deuxieme_element = x[2]
acces_plusiuers_elements = x[c(2,4,1)]
valeurs_qui_se_suivent = x[2:4]
valeurs_superieures_a_4 = x[x>4]
inverse_de_x = 1/x
double_de_x = 2*x
arrondir_x_divise_par4 = round(x/4)
arrondir_x_divise_par3 = round(x/4 , 2)
# on ajoute ici l'argument qui permet de choisir combien de chiffres apres la virgule
```
## Fonctions
A compléter
```{r}
summary(x)
valeur_min = min(x)
valeur_max = max(x)
mediane = median(x)
moyenne = mean(x)
variance = var(x)
ecart_type = sd(x)
```
## Lecture et écriture de fichiers contenant des données
```{r}
croissance = read.table(file = "C:/Users/LRB4365A/Desktop/TP1 TDB/Croissance_plantes.txt" , sep="\t" , header = T , stringsAsFactors = T)
variables = names(croissance)
croissance$poids
attach(croissance)
is_it_from_pyr = origine_geo == 'pyr'
plantes_pyr = which(origine_geo == 'pyr') # identifier quels arbres ont pour originegeo et donc qui ont origine_geo == 'pyr' -> TRUE
pyr = croissance[origine_geo == 'pyr' ,  1:2]
# on va sauvegarder ces données dans un autre fichier .txt
write.table(pyr , "croissance_plantes_pyr.txt" , quote = F , col.names = T , row.names = F , sep="\t")
```
## Fonctions graphiques
```{r}
summary(origine_geo) # on synthetise les origines des plantes et compter combien de plantes ont tel origine.
camembert_origine = pie(summary(origine_geo), main = "Origine géographique des plantes",col=rainbow(12))
barplot(summary(origine_geo), main = "Origine géographique des plantes")
# on est sur une variable qualitative, on ne va parler de histogramme mais de diagramme en barres
# Histogrammes (variable quantitative)
hist(taille, xlim=c(40,90), xlab="Taille(cm)" , ylab = "effectif" , freq=T , main = "Histogramme de la taille des plantes" , col="green")
# Boite à moustaches (variable quantitative)
boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon')
# Plusieurs boite à moustaches ( une variable quantitative en fonction des modalité d'une variable qualitative )
plot(origine_geo , taille, las=3 , main="Boxplot de la taille des plantes en fonction de l'origine geographique" , col='red' , ylab="Taille" ,xlab="Origines")
stripchart(taille~origine_geo , las=1)
plot(taille,poids, col="red" , main = "Evolution du poids en fonction de la taille")
# Affichage de plusieurs graphiques dans la meme fenetre
par(mfrow=c(2,2))  # 2 en lignes et 2 en colonnes par exemple
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
boxplot(taille,main="boxplot de la taille des plantes",ylab="taille")
plot(taille~origine_geo,las=3)
stripchart(taille~origine_geo,las=1)
```
x11(
x11()
dfsv
x11()
x11(boxplot(taille, main="Boxplot de la taille des plantes" , ylab="Taille" , col='salmon'))
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
hist(taille,xlim=c(40,90),xlab="taille (cm)",ylab="effectif",freq=T,main="histogramme de la taille des plantes",col="orange")
